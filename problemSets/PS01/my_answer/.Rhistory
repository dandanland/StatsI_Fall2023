"Normal People",
"Crime and Punishment",
"Pygmalion"
)
length_books<-nchar(books)
more_than_10<-mean(length_books>10)*100
for (book in books) {
if (nchar(book)>15){
book<-"Long Title"
}
}
cat("The percentage of book titles in the vector below that have more than 10 characters is:",more_than_10,"%")
cat(books)
books <- c(
"Dubliners",
"The Picture of Dorian Gray",
"Ulysses",
"War and Peace",
"Normal People",
"Crime and Punishment",
"Pygmalion"
)
length_books<-nchar(books)
more_than_10<-mean(length_books>10)*100
new_books<-books
for (i in 1:length(books)) {
if (nchar(new_books[i])>15){
new_books[i]<-"Long Title"
}
}
cat("The percentage of book titles in the vector below that have more than 10 characters is:",more_than_10,"%")
cat(new_books)
set.seed(2023)
educ <- rpois(1000, 2)
educ <- ifelse(educ > 4, 4, educ)
typeof(educ)
set.seed(2023)
educ <- rpois(1000, 2)
educ <- ifelse(educ > 4, 4, educ)
typeof(educ)
educ_factor<-as.factor(educ)
level_names<-c(
"No formal education"=0,
"Primary Education"=1,
"Secondary Education"=2,
"College Education"=3,
"Post-graduate Education"=4)
levels(educ_factor)<-level_names
cat(level_names)
set.seed(2023)
educ <- rpois(1000, 2)
educ <- ifelse(educ > 4, 4, educ)
typeof(educ)
educ_factor<-as.factor(educ)
level_names<-c(
"No formal education"=0,
"Primary Education"=1,
"Secondary Education"=2,
"College Education"=3,
"Post-graduate Education"=4)
levels(educ_factor)<-level_names
table(educ_factor)
cat(educ_factor)
set.seed(2023)
educ <- rpois(1000, 2)
educ <- ifelse(educ > 4, 4, educ)
typeof(educ)
educ_factor<-as.factor(educ)
level_names<-c(
0="No formal education",
set.seed(2023)
educ <- rpois(1000, 2)
educ <- ifelse(educ > 4, 4, educ)
typeof(educ)
educ_factor<-as.factor(educ)
level_names<-c(
"0"="No formal education",
"1"="Primary Education",
"2"="Secondary Education",
"3"="College Education",
"4"="Post-graduate Education")
levels(educ_factor)<-level_names
cat(educ_factor)
table(educ_factor)
set.seed(2023)
educ <- rpois(1000, 2)
educ <- ifelse(educ > 4, 4, educ)
typeof(educ)
educ_factor<-as.factor(educ)
level_names<-c(
"0"="No formal education",
"1"="Primary Education",
"2"="Secondary Education",
"3"="College Education",
"4"="Post-graduate Education")
levels(educ_factor)<-level_names
table(educ_factor)
#Change the levels order
new_level_names<- c(
"0"="Primary Education",
"1"="No formal education",
"2"="Secondary Education",
"3"="College Education",
"4"="Post-graduate Education")
levels(educ_factor)<-new_level_names
table(educ_factor)
#Change the levels order
new_level_names<- c(
"0"="Primary Education",
"1"="No formal education",
"2"="Secondary Education",
"3"="College Education",
"4"="Post-graduate Education")
new_educ_factor<-factor(educ_factor,levels = new_level_names)
table(new_educ_factor)
set.seed(2023)
vars <- list(
var1 = rexp(1000),
var2 = rnorm(1000, -2.75, 3),
var3 = rchisq(1000, 2),
var4 = rt(1000, 30),
var5 = rbeta(1000, 5, 2)
)
vars_skew<-skewness(vars)
help(skewness)
??skewness
set.seed(2023)
vars <- list(
var1 = rexp(1000),
var2 = rnorm(1000, -2.75, 3),
var3 = rchisq(1000, 2),
var4 = rt(1000, 30),
var5 = rbeta(1000, 5, 2)
)
#Calculate the mean and median of each variable
for (var_name in names(vars)) {
data<-vars[[var_name]]
var_mean<-mean(data)
var_median<-median(data)
#Compare mean and median
if (var_mean> var_median){
cat(vars[[var_name]], "is right/positive skew \n")
}else if(var_mean< var_median){
cat(vars[[var_name]], "is left/negtive skew \n")
} else{
cat(vars[[var_name]], "is approporitely normally distributed")
}
}
set.seed(2023)
vars <- list(
var1 = rexp(1000),
var2 = rnorm(1000, -2.75, 3),
var3 = rchisq(1000, 2),
var4 = rt(1000, 30),
var5 = rbeta(1000, 5, 2)
)
#Calculate the mean and median of each variable
for (var_name in names(vars)) {
data<-vars[[var_name]]
var_mean<-mean(data)
var_median<-median(data)
#Compare mean and median
if (var_mean> var_median){
cat(var_name, "is right/positive skew \n")
}else if(var_mean< var_median){
cat(var_name, "is left/negtive skew \n")
} else{
cat(var_name, "is approporitely normally distributed")
}
}
a<-1:12
class(a)
dim(a)<-c(3,2,2)
typeof(a)
dim(a)<-c(3,2,2)
a
class(a)
median.default()
median.default
if(c(TRUE,FALSE)) 1
set.seed(2023)
educ <- rpois(1000, 2)
educ <- ifelse(educ > 4, 4, educ)
typeof(educ)
educ_factor<-as.factor(educ)
edu_levels<-c( "No formal education",
"Primary Education",
"Secondary Education",
"College Education",
"Post-graduate Education")
orders<-c("0","1","2","3","4")
names(edu_levels)<-orders
edu_levels
educ_factor<-as.factor(educ)
edu_levels<-c( "No formal education",
"Primary Education",
"Secondary Education",
"College Education",
"Post-graduate Education")
orders<-c("0","1","2","3","4")
names(edu_levels)<-orders
levels(educ_factor)<-edu_levels
table(edu_levels)
set.seed(2023)
educ <- rpois(1000, 2)
educ <- ifelse(educ > 4, 4, educ)
typeof(educ)
educ_factor<-as.factor(educ)
edu_levels<-c( "No formal education",
"Primary Education",
"Secondary Education",
"College Education",
"Post-graduate Education")
orders<-c("0","1","2","3","4")
names(edu_levels)<-orders
levels(educ_factor)<-edu_levels
table(edu_levels)
set.seed(2023)
educ <- rpois(1000, 2)
educ <- ifelse(educ > 4, 4, educ)
typeof(educ)
educ_factor<-as.factor(educ)
educ_levels<-c( "No formal education",
"Primary Education",
"Secondary Education",
"College Education",
"Post-graduate Education")
orders<-c("0","1","2","3","4")
names(educ_levels)<-orders
levels(educ_factor)<-educ_levels
table(educ_levels)
table(educ_levels)
set.seed(2023)
educ <- rpois(1000, 2)
educ <- ifelse(educ > 4, 4, educ)
typeof(educ)
educ_factor<-as.factor(educ)
level_names<-c(
"0"="No formal education",
"1"="Primary Education",
"2"="Secondary Education",
"3"="College Education",
"4"="Post-graduate Education")
levels(educ_factor)<-level_names
table(educ_factor)
#Change the levels order
sorted_educ_factor<-sort(educ_factor,decreasing = TRUE)
sorted_educ_factor
table(sorted_educ_factor)
level_names["0"]
#Change the levels order
sorted_educ_factor<-sort(table(educ_factor),decreasing = TRUE)
sorted_educ_factor
set.seed(2023)
educ <- rpois(1000, 2)
educ <- ifelse(educ > 4, 4, educ)
typeof(educ)
educ_factor<-as.factor(educ)
level_names<-c(
"0"="No formal education",
"1"="Primary Education",
"2"="Secondary Education",
"3"="College Education",
"4"="Post-graduate Education")
level_names["0"]
levels(educ_factor)<-level_names
table(educ_factor)
most_common_level<-max(table(educ_factor))
most_common_level
sorted_educ_factor[0]
sorted_educ_factor["0"]
sorted_educ_factor[1]
sorted_educ_factor[[1]]
set.seed(2023)
educ <- rpois(1000, 2)
educ <- ifelse(educ > 4, 4, educ)
typeof(educ)
educ_factor<-as.factor(educ)
level_names<-c(
"0"="No formal education",
"1"="Primary Education",
"2"="Secondary Education",
"3"="College Education",
"4"="Post-graduate Education")
level_names["0"]
levels(educ_factor)<-level_names
table(educ_factor)
# Find the most common education level and put it as the first category
sorted_educ_factor<-sort(table(educ_factor),decreasing = TRUE)
sorted_educ_factor[1]
#
new_level_names<- c(
"0"="Primary Education",
"1"="No formal education",
"2"="Secondary Education",
"3"="College Education",
"4"="Post-graduate Education")
new_educ_factor<-factor(educ_factor,levels = new_level_names)
table(new_educ_factor)
source("~/Desktop/Applied Statistical Analysis I/StatsI_Fall2023_pre/problemSets/PS01/template/PS01.R", echo=TRUE)
source("~/Desktop/Applied Statistical Analysis I/StatsI_Fall2023_pre/problemSets/PS01/template/PS01.R", echo=TRUE)
source("~/Desktop/Applied Statistical Analysis I/StatsI_Fall2023_pre/problemSets/PS01/template/PS01.R", echo=TRUE)
source("~/Desktop/Applied Statistical Analysis I/StatsI_Fall2023_pre/problemSets/PS01/template/PS01.R", echo=TRUE)
#####################
# load libraries
# set wd
# clear global .envir
#####################
getwd()
setwd("/Users/danzhang/Desktop/Applied Statistical Analysis I/StatsI_Fall2023_pre/problemSets/PS01/template")
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c(),  pkgTest)
#####################
# Problem 1
#####################
y <- c(105, 69, 86, 100, 82, 111, 104, 110, 87, 108, 87, 90, 94, 113, 112, 98, 80, 97, 95, 111, 114, 89, 95, 126, 98)
# Question-1
alpha_1<-0.1
n<-length(y)
mean_y <-mean(y)
# standard error
se<-sd(y)/sqrt(n)
# critical value of t distribution
t_score<-qt(1-alpha_1/2,df=n-1)
#calculate confidence interval
lower_90<-mean_y-t_score*se
upper_90<-mean_y+t_score*se
cat("The 90% confidence interval for the average student IQ in the school is :[",lower_90,",",upper_90,"]")
#___________________________________
#Histogram
hist(y)
abline(v=mean_y,col="black")
abline(v=lower_90,col="black",lty="dashed")
abline(v=upper_90,col="black",lty="dashed")
#___________________________________
# Question-2
#Hypothesis test
mu<-100 #average IQ in all the country
alpha_2 <- 0.05
t_test_result<-t.test(y,mu=mu,alternative = "greater")
t_test_result
cat("t-statistic=", round(t_test_result$statistic,2),"\n")
cat("p_value=",round(t_test_result$p.value,2),"\n")
#determine whether to reject null hypothesis or not
if (t_test_result$p.value < alpha_2){
cat("Reject null hypothesis, the school average IQ socre is higher than the average IQ score in the country.")
}else{
cat("Failed to reject null hypothesis, there is no enough evidence to support that the school average IQ socre is higher than the average IQ score in the country.")
}
#####################
# Problem 2
#####################
expenditure <- read.table("https://raw.githubusercontent.com/ASDS-TCD/StatsI_Fall2023/main/datasets/expenditure.txt", header=T)
##  Question-1  ##
#Create scatter plots
pdf("Problem2_Question1_ScatterPlots.Pdf")
par(mfrow=c(2,3))
#Y vs X1
plot(expenditure$X1,expenditure$Y,xlab = "X1",
ylab = "Y",
main = "Y vs X1")
#Y vs X2
plot(expenditure$X2,expenditure$Y,xlab = "X2",
ylab = "Y",
main = "Y vs X2")
#Y vs X3
plot(expenditure$X3,expenditure$Y,xlab = "X3",
ylab = "Y",
main = "Y vs X3")
#X1 vs X2
plot(expenditure$X2,expenditure$X1,xlab = "X2",
ylab = "X1",
main = "X1 vs X2")
#X1 vs X3
plot(expenditure$X3,expenditure$X1,xlab = "X3",
ylab = "X1",
main = "X1 vs X3")
#X2 vs X3
plot(expenditure$X3,expenditure$X1,xlab = "X3",
ylab = "X2",
main = "X2 vs X3")
par(mfrow=c(1,1))
dev.off()
cat("As we can see from the scatter plots between Y,X1,X2 and X3. There are positive correlations between Y and X1, Y and X3, X1 and X3, X2 and X3,respectively. When the former variable increases,
the latter variable also shows an increasing trend. The relationships between X1 and X3, X2 and X3, are stronger than the relationships between Y and X1, Y and X3.
Besides, the correlations between Y and X2, X2 and X2 seem to be non-linear. When X2 is less than about 300, there are negative relationships between Y and X2,X1 and X2.
While X2 is greater than about 300, there are positive relationships between Y and X2,X1 and X2.")
##  Question-2  ##
#Create box plot
pdf("Problem2_Question2_BoxPlot.pdf")
boxplot(expenditure$Y~expenditure$Region,xlab = "Region",
ylab = "Per Capita Expenditure on Shelters/Housing Assistance (Y)",
main="Y vs Region",
col="orange",
border="blue")
names(expenditure$region)<-c("Northeast","North","South","West")
source("~/Desktop/Applied Statistical Analysis I/StatsI_Fall2023_pre/problemSets/PS01/template/PS01.R", echo=TRUE)
source("~/Desktop/Applied Statistical Analysis I/StatsI_Fall2023_pre/problemSets/PS01/template/PS01.R", echo=TRUE)
source("~/Desktop/Applied Statistical Analysis I/StatsI_Fall2023_pre/problemSets/PS01/template/PS01.R", echo=TRUE)
source("~/Desktop/Applied Statistical Analysis I/StatsI_Fall2023_pre/problemSets/PS01/template/PS01.R", echo=TRUE)
source("~/Desktop/Applied Statistical Analysis I/StatsI_Fall2023_pre/problemSets/PS01/template/PS01.R", echo=TRUE)
source("~/Desktop/Applied Statistical Analysis I/StatsI_Fall2023_pre/problemSets/PS01/template/PS01.R", echo=TRUE)
source("~/Desktop/Applied Statistical Analysis I/StatsI_Fall2023_pre/problemSets/PS01/template/PS01.R", echo=TRUE)
source("~/Desktop/Applied Statistical Analysis I/StatsI_Fall2023_pre/problemSets/PS01/template/PS01.R", echo=TRUE)
source("~/Desktop/Applied Statistical Analysis I/StatsI_Fall2023_pre/problemSets/PS01/template/PS01.R", echo=TRUE)
source("~/Desktop/Applied Statistical Analysis I/StatsI_Fall2023_pre/problemSets/PS01/template/PS01.R", echo=TRUE)
source("~/Desktop/Applied Statistical Analysis I/StatsI_Fall2023_pre/problemSets/PS01/template/PS01.R", echo=TRUE)
source("~/Desktop/Applied Statistical Analysis I/StatsI_Fall2023_pre/problemSets/PS01/template/PS01.R", echo=TRUE)
source("~/Desktop/Applied Statistical Analysis I/StatsI_Fall2023_pre/problemSets/PS01/template/PS01.R", echo=TRUE)
region_without_names <-c(1,2,3,4)
names(region_without_names)<-c("Northeast", "North", "South", "West")
region_with_names<-factor(expenditure$Region,levels = c(1,2,3,4),region_without_names)
boxplot(expenditure$Y~region_with_names,xlab = "Region",
ylab = "Per Capita Expenditure on Shelters/Housing Assistance (Y)",
main="Y vs Region",
col="orange",
border="blue")
View(expenditure)
boxplot(expenditure$Y~expenditure$Region,xlab = "Region",
ylab = "Per Capita Expenditure on Shelters/Housing Assistance (Y)",
main="Y vs Region",
col="orange",
border="blue")
axis(1, at = 1:4, labels = c("a", "b", "c", "d"))
boxplot(expenditure$Y~expenditure$Region,xlab = "Region",
ylab = "Per Capita Expenditure on Shelters/Housing Assistance (Y)",
xaxt="n",
main="Y vs Region",
col="orange",
border="blue")
axis(1, at = 1:4, labels = c("a", "b", "c", "d"))
boxplot(expenditure$Y~expenditure$Region,xlab = "Region",
ylab = "Per Capita Expenditure on Shelters/Housing Assistance (Y)",
xaxt="n",
main="Y vs Region",
col="orange",
border="blue")
axis(1, at = 1:4, labels =c ("Northeast", "North", "South", "West"))
source("~/Desktop/Applied Statistical Analysis I/StatsI_Fall2023_pre/problemSets/PS01/template/PS01.R", echo=TRUE)
plot(expenditure$X1,expenditure$Y,xlab = "Per Capita Personal Income (X1)",
ylab = "Per Capita Expenditure on Shelters/Housing Assistance (Y)",
main = " ")
#create symbol and color vectors for different regions
regions<-unique(expenditure$Region)
symbols<-c("A","B","C","D")
colors<-c("red","green","purple","blue")
#Using different symbol and color to plot scatter points for each region
for (i in 1:length(regions)) {
region_points<-expenditure[expenditure$Region==regions[i] , ]
points(region_points$X1,region_points$Y,
pch=symbols[i],
col=colors[i])
}
legend("topright",legend=(names(regions)<-c ("Northeast", "North", "South", "West")),col=colors,pch=symbols,title="Region")
title(main=" Scatter Plot of Y vs X1 by Region")
plot(expenditure$X1,expenditure$Y,xlab = "Per Capita Personal Income (X1)",
ylab = "Per Capita Expenditure on Shelters/Housing Assistance (Y)",
main = " ")
#create symbol and color vectors for different regions
regions<-unique(expenditure$Region)
symbols<-c("s","p","h","u")
colors<-c("red","green","purple","blue")
#Using different symbol and color to plot scatter points for each region
for (i in 1:length(regions)) {
region_points<-expenditure[expenditure$Region==regions[i] , ]
points(region_points$X1,region_points$Y,
pch=symbols[i],
col=colors[i])
}
legend("topright",legend=(names(regions)<-c ("Northeast", "North", "South", "West")),col=colors,pch=symbols,title="Region")
title(main=" Scatter Plot of Y vs X1 by Region")
source("~/Desktop/Applied Statistical Analysis I/StatsI_Fall2023_pre/problemSets/PS01/template/PS01.R", echo=TRUE)
y <- c(105, 69, 86, 100, 82, 111, 104, 110, 87, 108, 87, 90, 94, 113, 112, 98, 80, 97, 95, 111, 114, 89, 95, 126, 98)
# Question-1
alpha_1<-0.1
n<-length(y)
mean_y <-mean(y)
# standard error
se<-sd(y)/sqrt(n)
# critical value of t distribution
t_score<-qt(1-alpha_1/2,df=n-1)
#calculate confidence interval
lower_90<-mean_y-t_score*se
upper_90<-mean_y+t_score*se
cat("The 90% confidence interval for the average student IQ in the school is :[",round(lower_90,2),",",round(upper_90,2),"]")
#####################
# load libraries
# set wd
# clear global .envir
#####################
getwd()
source("~/Desktop/Applied Statistical Analysis I/StatsI_Fall2023_pre/problemSets/PS01/template/PS01.R", echo=TRUE)
source("~/Documents/GitHub/StatsI_Fall2023/problemSets/PS01/my_answer/PS01.R", echo=TRUE)
