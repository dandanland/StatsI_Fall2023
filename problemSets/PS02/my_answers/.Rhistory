total_samples<-sum(data_table)
row_sums<-rowSums(data_table)
col_sums<-colSums(data_table)
#calculate the frequencies
expected_freq<-outer(row_sums,col_sums)/total_samples
return(expected_freq)
}
#calculate Chi square statistic
chi_square_statistic<-sum((resulting_data - calculate_expected_freq(resulting_data))^2/calculate_expected_freq)
table_data<-matrix(c(14,6,7,7,7,1),nrow = 2,byrow = TRUE)
colnames(table_data)<-c("Not Stopped","Bribe requested","Stopped/given warning")
rownames(table_data)<-c("Upper class","Lower class")
#convert the table to dataframe
#resulting_data<-as.data.frame(table_data)
#calculate the expected frequencies
calculate_expected_freq<-function(data_table){
#calculate the sum of rows and columns of the data table
total_samples<-sum(data_table)
row_sums<-rowSums(data_table)
col_sums<-colSums(data_table)
#calculate the frequencies
expected_freq<-outer(row_sums,col_sums)/total_samples
return(expected_freq)
}
#calculate Chi square statistic
chi_square_statistic<-sum((resulting_data - calculate_expected_freq(resulting_data))^2/calculate_expected_freq)
#create the resulting data table
resulting_data<-matrix(c(14,6,7,7,7,1),nrow = 2,byrow = TRUE)
colnames(resulting_data)<-c("Not Stopped","Bribe requested","Stopped/given warning")
rownames(resulting_data)<-c("Upper class","Lower class")
#convert the table to dataframe
#resulting_data<-as.data.frame(table_data)
#calculate the expected frequencies
calculate_expected_freq<-function(data_table){
#calculate the sum of rows and columns of the data table
total_samples<-sum(data_table)
row_sums<-rowSums(data_table)
col_sums<-colSums(data_table)
#calculate the frequencies
expected_freq<-outer(row_sums,col_sums)/total_samples
return(expected_freq)
}
#calculate Chi square statistic
chi_square_statistic<-sum((resulting_data - calculate_expected_freq(resulting_data))^2/calculate_expected_freq)
source("~/Documents/GitHub/StatsI_Fall2023/problemSets/PS02/my_answers/P02.R", echo=TRUE)
source("~/Documents/GitHub/StatsI_Fall2023/problemSets/PS02/my_answers/P02.R", echo=TRUE)
chisq_result<-chisq.test(rsulting_data)
chisq_result<-chisq.test(resulting_data)
chisq_result
p_value<-pchisq(chi_square_statistic,degree_of_freedom,lower.tail = F)
p_value
## Q1-b ##
alpha<-0.1
p_value<-pchisq(chi_square_statistic,degree_of_freedom,lower.tail = F)
p_value
if (p_value<alpha){
cat("P-Value is approximately equal to :",round(p_value,2),"<",alpha,"Based on the chi-square test,
we reject the null hypothesis indicating that there is a statistically significant dependence between
driver class and whether officers were more or less likely to solicit a bribe from drivers.")
}else if (p_value<alpha) {
cat("P-Value is approximately equal to :",round(p_value,2),">",alpha,"Based on the chi-square test,
we cannot reject the null hypothesis. Which indicates that we do not have enough evidence to support
there is a statistically significant dependence between driver class and whether officers were
more or less likely to solicit a bribe from drivers")
}
source("~/Documents/GitHub/StatsI_Fall2023/problemSets/PS02/my_answers/P02.R", echo=TRUE)
source("~/Documents/GitHub/StatsI_Fall2023/problemSets/PS02/my_answers/P02.R", echo=TRUE)
residuals_for_cell<-(resulting_data - calculate_expected_freq(resulting_data))/sqrt(calculate_expected_freq(resulting_data))
residuals_for_cell
##Question 2##
## Q2-a ##
#load the subset data from West Bengal
data<-read.csv("https://raw.githubusercontent.com/kosukeimai/qss/master/PREDICTION/women.csv")
View(data)
typeof(data)
typeof(data[reserved])
typeof(data["reserved"])
data["reserved"
data["reserved"]
data_types <- sapply(data, class)
reserved<-as.factor(data$reserved)
typeof(reserved)
reserved_data<-as.factor(data$reserved)
typeof(reserved_data)
reserved_data<-as.factor(data$reserved)
bivariate_reg<-lm(data$water ~ reserved_data,data=data)
summary(bivariate_reg)
plot(reserved_data,data$water,"The scatter plot between reservation policy and water in R",
xlab="water",ylab="reserved")
plot(data$water,reserved_data,"The scatter plot between reservation policy and water in R",
xlab="reserved",ylab="water")
plot(reserved_data,data$water,"The scatter plot between reservation policy and water in R",
xlab="water",ylab="reserved")
source("~/Documents/GitHub/StatsI_Fall2023/tutorials/05/05_tutorial_HR.R", echo=TRUE)
source("~/Documents/GitHub/StatsI_Fall2023/problemSets/PS02/my_answers/P02.R", echo=TRUE)
source("~/Documents/GitHub/StatsI_Fall2023/problemSets/PS02/my_answers/P02.R", echo=TRUE)
source("~/Documents/GitHub/StatsI_Fall2023/problemSets/PS02/my_answers/P02.R", echo=TRUE)
source("~/Documents/GitHub/StatsI_Fall2023/problemSets/PS02/my_answers/P02.R", echo=TRUE)
getwd()
setwd("/Users/danzhang/Documents/GitHub/StatsI_Fall2023/problemSets/PS02/my_answers")
##Question 1##
## Q1-a ##
#create the resulting data table
resulting_data<-matrix(c(14,6,7,7,7,1),nrow = 2,byrow = TRUE)
colnames(resulting_data)<-c("Not Stopped","Bribe requested","Stopped/given warning")
rownames(resulting_data)<-c("Upper class","Lower class")
#calculate the expected frequencies
calculate_expected_freq<-function(data_table){
#calculate the sum of rows and columns of the data table
total_samples<-sum(data_table)
row_sums<-rowSums(data_table)
col_sums<-colSums(data_table)
#calculate the frequencies
expected_freq<-outer(row_sums,col_sums)/total_samples
return(expected_freq)
}
#calculate Chi square statistic
chi_square_statistic<-sum((resulting_data - calculate_expected_freq(resulting_data))^2/calculate_expected_freq(resulting_data))
#calculate degree of freedom
degree_of_freedom<-(nrow(resulting_data)-1)*(ncol(resulting_data)-1)
#output the test statistic and degree of freedom
cat("Chi-square statistic: ",chi_square_statistic,"\n")
cat("Degree of freedom: ",degree_of_freedom,"\n")
#examine the results
chisq_result<-chisq.test(resulting_data)
chisq_result
## Q1-b ##
alpha<-0.1
p_value<-pchisq(chi_square_statistic,degree_of_freedom,lower.tail = F)
p_value
if (p_value<alpha){
cat("P-Value is approximately equal to :",p_value,2,"<",alpha,"Based on the chi-square test, at a 99% confidence level,
we reject the null hypothesis indicating that there is a statistically significant dependence between
driver class and whether officers were more or less likely to solicit a bribe from drivers.")
}else if (p_value<alpha) {
cat("P-Value is approximately equal to :",p_value,2,">",alpha,"Based on the chi-square test, at a 99% confidence level,
we cannot reject the null hypothesis. Which indicates that we do not have enough evidence to support
there is a statistically significant dependence between driver class and whether officers were
more or less likely to solicit a bribe from drivers")
}
## Q1-c ##
#calculate the standardized residuals for each cell
residuals_for_cell<-(resulting_data - calculate_expected_freq(resulting_data))/sqrt(calculate_expected_freq(resulting_data)
residuals_for_cell
col_sums<-colSums(data_table)
resulting_data<-matrix(c(14,6,7,7,7,1),nrow = 2,byrow = TRUE)
colnames(resulting_data)<-c("Not Stopped","Bribe requested","Stopped/given warning")
rownames(resulting_data)<-c("Upper class","Lower class")
#calculate the expected frequencies
calculate_expected_freq<-function(data_table){
#calculate the sum of rows and columns of the data table
total_samples<-sum(data_table)
row_sums<-rowSums(data_table)
col_sums<-colSums(data_table)
#calculate the frequencies
expected_freq<-outer(row_sums,col_sums)/total_samples
return(expected_freq)
}
#calculate Chi square statistic
chi_square_statistic<-sum((resulting_data - calculate_expected_freq(resulting_data))^2/calculate_expected_freq(resulting_data))
#calculate degree of freedom
degree_of_freedom<-(nrow(resulting_data)-1)*(ncol(resulting_data)-1)
source("~/Documents/GitHub/StatsI_Fall2023/problemSets/PS02/my_answers/P02.R", echo=TRUE)
resulting_data<-matrix(c(14,6,7,7,7,1),nrow = 2,byrow = TRUE)
colnames(resulting_data)<-c("Not Stopped","Bribe requested","Stopped/given warning")
rownames(resulting_data)<-c("Upper class","Lower class")
#calculate the expected frequencies
calculate_expected_freq<-function(data_table){
#calculate the sum of rows and columns of the data table
total_samples<-sum(data_table)
row_sums<-rowSums(data_table)
col_sums<-colSums(data_table)
#calculate the frequencies
expected_freq<-outer(row_sums,col_sums)/total_samples
return(expected_freq)
}
#calculate Chi square statistic
chi_square_statistic<-sum((resulting_data - calculate_expected_freq(resulting_data))^2/calculate_expected_freq(resulting_data))
#calculate degree of freedom
degree_of_freedom<-(nrow(resulting_data)-1)*(ncol(resulting_data)-1)
#output the test statistic and degree of freedom
cat("Chi-square statistic: ",chi_square_statistic,"\n")
cat("Degree of freedom: ",degree_of_freedom,"\n")
#examine the results
chisq_result<-chisq.test(resulting_data)
chisq_result
## Q1-b ##
alpha<-0.1
p_value<-pchisq(chi_square_statistic,degree_of_freedom,lower.tail = F)
p_value
if (p_value<alpha){
cat("P-Value is approximately equal to :",p_value,2,"<",alpha,"Based on the chi-square test, at a 99% confidence level,
we reject the null hypothesis indicating that there is a statistically significant dependence between
driver class and whether officers were more or less likely to solicit a bribe from drivers.")
}else if (p_value<alpha) {
cat("P-Value is approximately equal to :",p_value,2,">",alpha,"Based on the chi-square test, at a 99% confidence level,
we cannot reject the null hypothesis. Which indicates that we do not have enough evidence to support
there is a statistically significant dependence between driver class and whether officers were
more or less likely to solicit a bribe from drivers")
}
## Q1-c ##
#calculate the standardized residuals for each cell
residuals_for_cell<-(resulting_data - calculate_expected_freq(resulting_data))/sqrt(calculate_expected_freq(resulting_data))
residuals_for_cell
for (i in 1:nrow(resulting_data)){
for (j in 1:ncol(resulting_data)){
cell_residuals<-(resulting_data-calculate_expected_freq(resulting_data))/sqrt(calculate_expected_freq(resulting_data)(1-rowSums(resulting_data[i,])/sum(resulting_data))(1-colSums(resulting_data[,j]))/sum(resulting_data))
cell_residuals
}
}
calculate_expected_freq<-function(data_table){
#calculate the sum of rows and columns of the data table
total_samples<-sum(data_table)
row_sums<-rowSums(data_table)
col_sums<-colSums(data_table)
#calculate the frequencies
expected_freq<-outer(row_sums,col_sums)/total_samples
return(expected_freq)
}
for (i in 1:nrow(resulting_data)){
for (j in 1:ncol(resulting_data)){
cell_residuals<-(resulting_data-calculate_expected_freq(resulting_data))/sqrt(calculate_expected_freq(resulting_data)(1-rowSums(resulting_data[i,])/sum(resulting_data))(1-colSums(resulting_data[,j]))/sum(resulting_data))
cell_residuals
}
}
for (i in 1:nrow(resulting_data)){
for (j in 1:ncol(resulting_data)){
cell_residuals<-(resulting_data-cal_f_e(resulting_data))/sqrt(cal_f_e(resulting_data)(1-rowSums(resulting_data[i,])/sum(resulting_data))(1-colSums(resulting_data[,j]))/sum(resulting_data))
cell_residuals
}
}
cal_f_e<-function(data_table){
#calculate the sum of rows and columns of the data table
total_samples<-sum(data_table)
row_sums<-rowSums(data_table)
col_sums<-colSums(data_table)
#calculate the frequencies
expected_freq<-outer(row_sums,col_sums)/total_samples
return(expected_freq)
}
#calculate Chi square statistic
chi_square_statistic<-sum((resulting_data - cal_f_e(resulting_data))^2/cal_f_e(resulting_data))
#calculate degree of freedom
degree_of_freedom<-(nrow(resulting_data)-1)*(ncol(resulting_data)-1)
#output the test statistic and degree of freedom
cat("Chi-square statistic: ",chi_square_statistic,"\n")
cat("Degree of freedom: ",degree_of_freedom,"\n")
#examine the results
chisq_result<-chisq.test(resulting_data)
chisq_result
p_value<-pchisq(chi_square_statistic,degree_of_freedom,lower.tail = F)
for (i in 1:nrow(resulting_data)){
for (j in 1:ncol(resulting_data)){
cell_residuals<-(resulting_data-cal_f_e(resulting_data))/sqrt(cal_f_e(resulting_data)(1-rowSums(resulting_data[i,])/sum(resulting_data))(1-colSums(resulting_data[,j]))/sum(resulting_data))
cell_residuals
}
}
for (i in 1:nrow(resulting_data)){
for (j in 1:ncol(resulting_data)){
cell_residuals<-(resulting_data[i,j]-cal_f_e(resulting_data)[i,j])/
sqrt(cal_f_e(resulting_data)[i,j]*(1-rowSums(resulting_data[i,])/sum(resulting_data))(1-colSums(resulting_data[,j]))/sum(resulting_data))
cell_residuals
}
}
for (i in 1:nrow(resulting_data)){
for (j in 1:ncol(resulting_data)){
cell_residuals<-(resulting_data[i,j]-cal_f_e(resulting_data)[i,j])/
sqrt(cal_f_e(resulting_data)[i,j]*(1-rowSums(resulting_data[i,])/sum(resulting_data))*(1-colSums(resulting_data[,j]))/sum(resulting_data))
cell_residuals
}
}
resulting_data<-matrix(c(14,6,7,7,7,1),nrow = 2,byrow = TRUE)
colnames(resulting_data)<-c("Not Stopped","Bribe requested","Stopped/given warning")
rownames(resulting_data)<-c("Upper class","Lower class")
#calculate the expected frequencies
cal_f_e<-function(data_table){
#calculate the sum of rows and columns of the data table
total_samples<-sum(data_table)
row_sums<-rowSums(data_table)
col_sums<-colSums(data_table)
#calculate the frequencies
expected_freq<-outer(row_sums,col_sums)/total_samples
return(expected_freq)
}
#calculate Chi square statistic
chi_square_statistic<-sum((resulting_data - cal_f_e(resulting_data))^2/cal_f_e(resulting_data))
#calculate degree of freedom
degree_of_freedom<-(nrow(resulting_data)-1)*(ncol(resulting_data)-1)
#output the test statistic and degree of freedom
cat("Chi-square statistic: ",chi_square_statistic,"\n")
cat("Degree of freedom: ",degree_of_freedom,"\n")
#examine the results
chisq_result<-chisq.test(resulting_data)
chisq_result
## Q1-b ##
alpha<-0.1
p_value<-pchisq(chi_square_statistic,degree_of_freedom,lower.tail = F)
p_value
if (p_value<alpha){
cat("P-Value is approximately equal to :",p_value,2,"<",alpha,"Based on the chi-square test, at a 99% confidence level,
we reject the null hypothesis indicating that there is a statistically significant dependence between
driver class and whether officers were more or less likely to solicit a bribe from drivers.")
}else if (p_value<alpha) {
cat("P-Value is approximately equal to :",p_value,2,">",alpha,"Based on the chi-square test, at a 99% confidence level,
we cannot reject the null hypothesis. Which indicates that we do not have enough evidence to support
there is a statistically significant dependence between driver class and whether officers were
more or less likely to solicit a bribe from drivers")
}
## Q1-c ##
#calculate the standardized residuals for each cell
residuals_for_cell<-(resulting_data - cal_f_e(resulting_data))/sqrt(cal_f_e(resulting_data))
residuals_for_cell
for (i in 1:nrow(resulting_data)){
for (j in 1:ncol(resulting_data)){
cell_residuals<-(resulting_data[i,j]-cal_f_e(resulting_data)[i,j])/
sqrt(cal_f_e(resulting_data)[i,j]*(1-rowSums(resulting_data[i,])/sum(resulting_data))*(1-colSums(resulting_data[,j]))/sum(resulting_data))
cell_residuals
}
}
for (i in 1:nrow(resulting_data)){
for (j in 1:ncol(resulting_data)){
cell_residuals<-(resulting_data[i,j]-cal_f_e(resulting_data)[i,j])/
sqrt(cal_f_e(resulting_data)[i,j]*(1-rowSums(resulting_data[i])/sum(resulting_data))*(1-colSums(resulting_data[j]))/sum(resulting_data))
cell_residuals
}
}
for (i in 1:nrow(resulting_data)){
for (j in 1:ncol(resulting_data)){
cell_residuals<-(resulting_data[i,j]-cal_f_e(resulting_data)[i,j])/
sqrt(cal_f_e(resulting_data)[i,j]*(1-rowSums(resulting_data[i,1])/sum(resulting_data))*(1-colSums(resulting_data[1,j]))/sum(resulting_data))
cell_residuals
}
}
rowSums(resulting_data)
for (i in 1:nrow(resulting_data)){
for (j in 1:ncol(resulting_data)){
cell_residuals<-(resulting_data[i,j]-cal_f_e(resulting_data)[i,j])/
sqrt(cal_f_e(resulting_data)[i,j]*(1-rowSums(resulting_data[1,j])/sum(resulting_data))*(1-colSums(resulting_data[i,1]))/sum(resulting_data))
cell_residuals
}
}
for (i in 1:nrow(resulting_data)){
for (j in 1:ncol(resulting_data)){
cell_residuals<-(resulting_data[i,j]-cal_f_e(resulting_data)[i,j])/
sqrt(cal_f_e(resulting_data)[i,j]*(1-sum(resulting_data[i,])/sum(resulting_data))*(1-sum(resulting_data[,j]))/sum(resulting_data))
cell_residuals
}
}
f_e<-cal_f_e(resulting_data)
for (i in 1:nrow(resulting_data)){
for (j in 1:ncol(resulting_data)){
cell_residuals<-(resulting_data[i,j]-f_e[i,j])/
sqrt(f_e(resulting_data)[i,j]*(1-sum(resulting_data[i,])/sum(resulting_data))*(1-sum(resulting_data[,j]))/sum(resulting_data))
cell_residuals
}
}
for (i in 1:nrow(resulting_data)){
for (j in 1:ncol(resulting_data)){
cell_residuals<-(resulting_data[i,j]-f_e[i,j])/
sqrt(f_e[i,j]*(1-sum(resulting_data[i,])/sum(resulting_data))*(1-sum(resulting_data[,j]))/sum(resulting_data))
cell_residuals
}
}
source("~/Documents/GitHub/StatsI_Fall2023/problemSets/PS02/my_answers/P02.R", echo=TRUE)
for (i in seq(1:nrow(resulting_data))){
for (j in seq(1:ncol(resulting_data))){
cell_residuals<-(resulting_data[i,j]-f_e[i,j])/
sqrt(f_e[i,j]*(1-sum(resulting_data[i,])/sum(resulting_data))*(1-sum(resulting_data[,j]))/sum(resulting_data))
cell_residuals
}
}
sum(resulting_data[1,])
for (i in seq(1:nrow(resulting_data))){
for (j in seq(1:ncol(resulting_data))){
cell_residual<-(resulting_data[i,j]-f_e[i,j])/
sqrt(f_e[i,j]*(1-sum(resulting_data[i,])/sum(resulting_data))*(1-sum(resulting_data[,j]))/sum(resulting_data))
cell_residuals<-c(cell_residuals,cell_residual)
}
}
View(residuals_for_cell)
for (i in seq(1:nrow(resulting_data))){
for (j in seq(1:ncol(resulting_data))){
cell_residual<-(resulting_data[i,j]-f_e[i,j])/sqrt(f_e[i,j]*(1-sum(resulting_data[i,])/sum(resulting_data))*(1-sum(resulting_data[,j]))/sum(resulting_data))
cell_residuals<-c(cell_residuals,cell_residual)
}
}
View(f_e)
f_e[1,1]
for (i in seq(1:nrow(resulting_data))){
for (j in seq(1:ncol(resulting_data))){
cell_residual<-(resulting_data[i,j]-f_e[i,j])/sqrt(f_e[i,j]*(1-sum(resulting_data[i,])/sum(resulting_data))*(1-sum(resulting_data[,j]))/sum(resulting_data))
cell_residuals<-c(cell_residuals,cell_residual)
}
}
cell_residuals<-numeric()
cell_residual<-0
f_e<-cal_f_e(resulting_data)
f_e[1,1]
for (i in seq(1:nrow(resulting_data))){
for (j in seq(1:ncol(resulting_data))){
cell_residual<-(resulting_data[i,j]-f_e[i,j])/sqrt(f_e[i,j]*(1-sum(resulting_data[i,])/sum(resulting_data))*(1-sum(resulting_data[,j]))/sum(resulting_data))
cell_residuals<-c(cell_residuals,cell_residual)
}
}
for (i in seq(1:nrow(resulting_data))){
for (j in seq(1:ncol(resulting_data))){
cell_residual<-(resulting_data[i,j]-f_e[i,j])/sqrt(f_e[i,j]*(1-rowSums(resulting_data[i,])/sum(resulting_data))*(1-colSums(resulting_data[,j]))/sum(resulting_data))
cell_residuals<-c(cell_residuals,cell_residual)
}
}
resulting_data<-matrix(c(14,6,7,7,7,1),nrow = 2,byrow = TRUE)
colnames(resulting_data)<-c("Not Stopped","Bribe requested","Stopped/given warning")
rownames(resulting_data)<-c("Upper class","Lower class")
#calculate the expected frequencies
#calculate the sum of rows and columns of the data table
total_samples<-sum(resulting_data)
row_sums<-rowSums(resulting_data)
col_sums<-colSums(resulting_data)
#calculate the frequencies
expected_freq<-outer(row_sums,col_sums)/total_samples
#calculate Chi square statistic
chi_square_statistic<-sum((resulting_data - expected_freq)^2/expected_freq)
#calculate degree of freedom
degree_of_freedom<-(nrow(resulting_data)-1)*(ncol(resulting_data)-1)
for (i in seq(1:nrow(resulting_data))){
for (j in seq(1:ncol(resulting_data))){
cell_residual<-(resulting_data[i,j]-expected_freq[i,j])/sqrt(expected_freq[i,j]*(1-row_sum[[i]])/sum(resulting_data)*(1-col_sum[[j]])/sum(resulting_data))
cell_residuals<-c(cell_residuals,cell_residual)
}
}
for (i in seq(1:nrow(resulting_data))){
for (j in seq(1:ncol(resulting_data))){
cell_residual<-(resulting_data[i,j]-expected_freq[i,j])/sqrt(expected_freq[i,j]*(1-row_sums[[i]])/sum(resulting_data)*(1-col_sums[[j]])/sum(resulting_data))
cell_residuals<-c(cell_residuals,cell_residual)
}
}
row_sums[[1]]
row_sums[[2]]
for (i in seq(1:nrow(resulting_data))){
for (j in seq(1:ncol(resulting_data))){
cell_residual<-(resulting_data[i,j]-expected_freq[i,j])/sqrt(expected_freq[i,j]*(1-row_sums[i])/sum(resulting_data)*(1-col_sums[j])/sum(resulting_data))
cell_residuals<-c(cell_residuals,cell_residual)
}
}
cell_residuals
cell_residuals
resulting_data<-matrix(c(14,6,7,7,7,1),nrow = 2,byrow = TRUE)
#colnames(resulting_data)<-c("Not Stopped","Bribe requested","Stopped/given warning")
#rownames(resulting_data)<-c("Upper class","Lower class")
#calculate the expected frequencies
#calculate the sum of rows and columns of the data table
total_samples<-sum(resulting_data)
row_sums<-rowSums(resulting_data)
col_sums<-colSums(resulting_data)
#calculate the frequencies
expected_freq<-outer(row_sums,col_sums)/total_samples
#calculate Chi square statistic
chi_square_statistic<-sum((resulting_data - expected_freq)^2/expected_freq)
#calculate degree of freedom
degree_of_freedom<-(nrow(resulting_data)-1)*(ncol(resulting_data)-1)
#output the test statistic and degree of freedom
cat("Chi-square statistic: ",chi_square_statistic,"\n")
cat("Degree of freedom: ",degree_of_freedom,"\n")
#examine the results
chisq_result<-chisq.test(resulting_data)
chisq_result
## Q1-b ##
alpha<-0.1
p_value<-pchisq(chi_square_statistic,degree_of_freedom,lower.tail = F)
p_value
if (p_value<alpha){
cat("P-Value is approximately equal to :",p_value,2,"<",alpha,"Based on the chi-square test, at a 99% confidence level,
we reject the null hypothesis indicating that there is a statistically significant dependence between
driver class and whether officers were more or less likely to solicit a bribe from drivers.")
}else if (p_value<alpha) {
cat("P-Value is approximately equal to :",p_value,2,">",alpha,"Based on the chi-square test, at a 99% confidence level,
we cannot reject the null hypothesis. Which indicates that we do not have enough evidence to support
there is a statistically significant dependence between driver class and whether officers were
more or less likely to solicit a bribe from drivers")
}
## Q1-c ##
#calculate the standardized residuals for each cell
cell_residuals<-c()
cell_residual<-0
row_sums[[2]]
for (i in seq(1:nrow(resulting_data))){
for (j in seq(1:ncol(resulting_data))){
cell_residual<-(resulting_data[i,j]-expected_freq[i,j])/sqrt(expected_freq[i,j]*(1-row_sums[i])/sum(resulting_data)*(1-col_sums[j])/sum(resulting_data))
cell_residuals<-c(cell_residuals,cell_residual)
}
}
cell_residuals
cell_residuals_table
cell_residuals_table<-matrix(cell_residuals_table,nrow = 2,byrow = TRUE)
cell_residuals_table<-matrix(cell_residuals,nrow = 2,byrow = TRUE)
colnames(resulting_data)<-c("Not Stopped","Bribe requested","Stopped/given warning")
rownames(resulting_data)<-c("Upper class","Lower class")
View(cell_residuals_table)
cell_residuals_table<-matrix(cell_residuals,nrow = 2,byrow = TRUE)
colnames(cell_residuals_table)<-c("Not Stopped","Bribe requested","Stopped/given warning")
rownames(cell_residuals_table)<-c("Upper class","Lower class")
source("~/Documents/GitHub/StatsI_Fall2023/problemSets/PS02/my_answers/P02.R", echo=TRUE)
source("~/Documents/GitHub/StatsI_Fall2023/problemSets/PS02/my_answers/P02.R")
cell_residuals_table<-matrix(cell_residuals,nrow = 2,byrow = TRUE)
colnames(cell_residuals_table)<-c("Not Stopped","Bribe requested","Stopped/given warning")
rownames(cell_residuals_table)<-c("Upper class","Lower class")
cell_residual<-0
View(expected_freq)
View(resulting_data)
chisq_result
cell_residuals_table
summary(bivariate_reg)
